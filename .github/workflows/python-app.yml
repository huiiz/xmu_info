# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  schedule:
    - cron: "30 8,11,15,18 * * *"

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TZ: "Asia/Shanghai"

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Start application
        run: python get_info.py

      - name: deploy
        uses: JamesIves/github-pages-deploy-action@v4.2.3
        with:
          branch: gh-pages
          folder: data
          token: "${{ secrets.SECRET }}"

      - name: update
        uses: JamesIves/github-pages-deploy-action@v4.2.3
        with:
          branch: main
          folder: .
          token: "${{ secrets.SECRET }}"

      - name: remote activate
        run: |
          curl -A "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36 Edg/116.0.1938.54" "https://huggingface.co/spaces/huiiz/xmu_info"
          curl -A "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36 Edg/116.0.1938.54" "https://huiiz-xmu-info.hf.space/"

      # - name: Setup GIT user
      #   uses: fregante/setup-git-user@v2

      # - name: Push done work
      #   run: |
      #     git add .
      #     git commit -m "Updated repository content"
      #     git push origin main

      # - name: Deploy
      #   uses: JamesIves/github-pages-deploy-action@v4 # 执行一些公开的action， 这里包含部署到git pages上所需要的命令
      #   with: # 不设置branch会默认将要部署的内容存于gh—pages branch Defaults to gh-pages.
      #     FOLDER: data
      #     CLEAN: true

    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    # - name: Test with pytest
    #   run: |
    #     pytest
